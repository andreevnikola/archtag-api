name: Deploy API to Server

on:
  push:
    branches:
      - main

jobs:
  build:
    if: contains(github.event.head_commit.message, 'deploy')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create application.properties file
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/application.properties <<EOL
          spring.application.name=security

          # Updated Database Configuration
          spring.datasource.url=jdbc:postgresql://ep-spring-dew-a2yw1wtc-pooler.eu-central-1.aws.neon.tech:5432/verceldb?sslmode=require
          spring.datasource.username=default
          spring.datasource.password=4pyJ8AdOLkzR
          spring.datasource.driver-class-name=org.postgresql.Driver

          spring.jpa.hibernate.ddl-auto=update
          spring.jpa.show-sql=false
          spring.jpa.properties.hibernate.format_sql=true
          spring.jpa.database=postgresql
          spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

          authentication.secret-key=BFA9E810C3A7856B2F6D08A7E48FB72B4C0C4B3C20C1E6BD0D3B5E8A7C8D1F2E
          authentication.token-expiration=60

          # PERFORMANCE SETTINGS
          server.tomcat.max-threads=4
          spring.threads.virtual.enabled=true

          # Email Configuration
          spring.mail.host=smtp.office365.com
          spring.mail.port=587
          spring.mail.username=archtag@skyier.net
          spring.mail.password=NikiVladi_2024
          spring.mail.properties.mail.smtp.auth=true
          spring.mail.properties.mail.smtp.starttls.enable=true

          # Set the maximum file size (e.g., 10MB)
          spring.servlet.multipart.max-file-size=10MB
          # Set the maximum request size (e.g., 10MB)
          spring.servlet.multipart.max-request-size=10MB

          webapp.url=http://195.179.231.200
          storage.location=/usr/share/nginx/html/images
          EOL

      - name: Build and push Docker images
        run: |
          docker build -t vladigpasev/archtag-api:latest .
          docker push vladigpasev/archtag-api:latest

  deploy:
    if: contains(github.event.head_commit.message, 'deploy')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Server
        env:
          HOST: ${{ secrets.SERVER_HOST }}
          USER: ${{ secrets.SERVER_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > ssh_key
          chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key ${USER}@${HOST} << 'EOF'
            echo "Connecting to server"
            cd ~/archtag
            echo "Pulling new Docker images"
            docker-compose pull archtag-api
            echo "Bringing up the updated containers with force recreate"
            docker-compose up -d --force-recreate archtag-api
            echo "Deployment complete"
          EOF